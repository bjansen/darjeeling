/**
 * This class is generated by jOOQ
 */
package gen.com.github.bjansen.darjeeling.tables.records;


import ceylon.language.Boolean;
import ceylon.language.Integer;
import ceylon.language.String;
import ceylon.time.DateTime;

import gen.com.github.bjansen.darjeeling.tables.Folders;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FoldersRecord extends UpdatableRecordImpl<FoldersRecord> implements Record6<Integer, String, Integer, DateTime, DateTime, Boolean> {

	private static final long serialVersionUID = -1539329359;

	/**
	 * Setter for <code>feedzee2.folders.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>feedzee2.folders.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>feedzee2.folders.name</code>.
	 */
	public void setName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>feedzee2.folders.name</code>.
	 */
	public String getName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>feedzee2.folders.user_id</code>.
	 */
	public void setUserId(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>feedzee2.folders.user_id</code>.
	 */
	public Integer getUserId() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>feedzee2.folders.created_at</code>.
	 */
	public void setCreatedAt(DateTime value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>feedzee2.folders.created_at</code>.
	 */
	public DateTime getCreatedAt() {
		return (DateTime) getValue(3);
	}

	/**
	 * Setter for <code>feedzee2.folders.updated_at</code>.
	 */
	public void setUpdatedAt(DateTime value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>feedzee2.folders.updated_at</code>.
	 */
	public DateTime getUpdatedAt() {
		return (DateTime) getValue(4);
	}

	/**
	 * Setter for <code>feedzee2.folders.is_expanded</code>.
	 */
	public void setIsExpanded(Boolean value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>feedzee2.folders.is_expanded</code>.
	 */
	public Boolean getIsExpanded() {
		return (Boolean) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Integer, String, Integer, DateTime, DateTime, Boolean> fieldsRow() {
		return (Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Integer, String, Integer, DateTime, DateTime, Boolean> valuesRow() {
		return (Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Folders.folders.id;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Folders.folders.name;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Folders.folders.userId;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<DateTime> field4() {
		return Folders.folders.createdAt;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<DateTime> field5() {
		return Folders.folders.updatedAt;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field6() {
		return Folders.folders.isExpanded;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DateTime value4() {
		return getCreatedAt();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DateTime value5() {
		return getUpdatedAt();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value6() {
		return getIsExpanded();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FoldersRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FoldersRecord value2(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FoldersRecord value3(Integer value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FoldersRecord value4(DateTime value) {
		setCreatedAt(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FoldersRecord value5(DateTime value) {
		setUpdatedAt(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FoldersRecord value6(Boolean value) {
		setIsExpanded(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FoldersRecord values(Integer value1, String value2, Integer value3, DateTime value4, DateTime value5, Boolean value6) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached FoldersRecord
	 */
	public FoldersRecord() {
		super(Folders.folders);
	}

	/**
	 * Create a detached, initialised FoldersRecord
	 */
	public FoldersRecord(Integer id, String name, Integer userId, DateTime createdAt, DateTime updatedAt, Boolean isExpanded) {
		super(Folders.folders);

		setValue(0, id);
		setValue(1, name);
		setValue(2, userId);
		setValue(3, createdAt);
		setValue(4, updatedAt);
		setValue(5, isExpanded);
	}
}

/**
 * This class is generated by jOOQ
 */
package gen.com.github.bjansen.darjeeling.tables;


import ceylon.language.Integer;
import ceylon.time.DateTime;

import com.github.bjansen.ceylon.jooqadapter.DateTimeConverter;
import com.github.bjansen.ceylon.jooqadapter.IntegerConverter;

import gen.com.github.bjansen.darjeeling.Feedzee2;
import gen.com.github.bjansen.darjeeling.Keys;
import gen.com.github.bjansen.darjeeling.tables.records.SubscriptionsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Subscriptions extends TableImpl<SubscriptionsRecord> {

	private static final long serialVersionUID = 1682081838;

	/**
	 * The reference instance of <code>feedzee2.subscriptions</code>
	 */
	public static final Subscriptions subscriptions = new Subscriptions();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<SubscriptionsRecord> getRecordType() {
		return SubscriptionsRecord.class;
	}

	/**
	 * The column <code>feedzee2.subscriptions.id</code>.
	 */
	public final TableField<SubscriptionsRecord, Integer> id = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "", new IntegerConverter());

	/**
	 * The column <code>feedzee2.subscriptions.feed_id</code>.
	 */
	public final TableField<SubscriptionsRecord, Integer> feedId = createField("feed_id", org.jooq.impl.SQLDataType.INTEGER, this, "", new IntegerConverter());

	/**
	 * The column <code>feedzee2.subscriptions.folder_id</code>.
	 */
	public final TableField<SubscriptionsRecord, Integer> folderId = createField("folder_id", org.jooq.impl.SQLDataType.INTEGER, this, "", new IntegerConverter());

	/**
	 * The column <code>feedzee2.subscriptions.user_id</code>.
	 */
	public final TableField<SubscriptionsRecord, Integer> userId = createField("user_id", org.jooq.impl.SQLDataType.INTEGER, this, "", new IntegerConverter());

	/**
	 * The column <code>feedzee2.subscriptions.created_at</code>.
	 */
	public final TableField<SubscriptionsRecord, DateTime> createdAt = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "", new DateTimeConverter());

	/**
	 * The column <code>feedzee2.subscriptions.updated_at</code>.
	 */
	public final TableField<SubscriptionsRecord, DateTime> updatedAt = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "", new DateTimeConverter());

	/**
	 * Create a <code>feedzee2.subscriptions</code> table reference
	 */
	public Subscriptions() {
		this("subscriptions", null);
	}

	/**
	 * Create an aliased <code>feedzee2.subscriptions</code> table reference
	 */
	public Subscriptions(String alias) {
		this(alias, subscriptions);
	}

	private Subscriptions(String alias, Table<SubscriptionsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Subscriptions(String alias, Table<SubscriptionsRecord> aliased, Field<?>[] parameters) {
		super(alias, Feedzee2.feedzee2, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<SubscriptionsRecord, Integer> getIdentity() {
		return Keys.IDENTITY_subscriptions;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<SubscriptionsRecord> getPrimaryKey() {
		return Keys.keySubscriptionsPrimary;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<SubscriptionsRecord>> getKeys() {
		return Arrays.<UniqueKey<SubscriptionsRecord>>asList(Keys.keySubscriptionsPrimary);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Subscriptions as(String alias) {
		return new Subscriptions(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Subscriptions rename(String name) {
		return new Subscriptions(name, null);
	}
}

/**
 * This class is generated by jOOQ
 */
package gen.com.github.bjansen.darjeeling.tables;


import ceylon.language.Integer;
import ceylon.language.String;
import ceylon.time.DateTime;

import com.github.bjansen.ceylon.jooqadapter.DateTimeConverter;
import com.github.bjansen.ceylon.jooqadapter.IntegerConverter;
import com.github.bjansen.ceylon.jooqadapter.StringConverter;

import gen.com.github.bjansen.darjeeling.Feedzee2;
import gen.com.github.bjansen.darjeeling.Keys;
import gen.com.github.bjansen.darjeeling.tables.records.ItemsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Items extends TableImpl<ItemsRecord> {

	private static final long serialVersionUID = 872588686;

	/**
	 * The reference instance of <code>feedzee2.items</code>
	 */
	public static final Items items = new Items();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ItemsRecord> getRecordType() {
		return ItemsRecord.class;
	}

	/**
	 * The column <code>feedzee2.items.id</code>.
	 */
	public final TableField<ItemsRecord, Integer> id = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "", new IntegerConverter());

	/**
	 * The column <code>feedzee2.items.feed_id</code>.
	 */
	public final TableField<ItemsRecord, Integer> feedId = createField("feed_id", org.jooq.impl.SQLDataType.INTEGER, this, "", new IntegerConverter());

	/**
	 * The column <code>feedzee2.items.title</code>.
	 */
	public final TableField<ItemsRecord, String> title = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "", new StringConverter());

	/**
	 * The column <code>feedzee2.items.description</code>.
	 */
	public final TableField<ItemsRecord, java.lang.String> description = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>feedzee2.items.publication_date</code>.
	 */
	public final TableField<ItemsRecord, DateTime> publicationDate = createField("publication_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new DateTimeConverter());

	/**
	 * The column <code>feedzee2.items.url</code>.
	 */
	public final TableField<ItemsRecord, String> url = createField("url", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "", new StringConverter());

	/**
	 * The column <code>feedzee2.items.created_at</code>.
	 */
	public final TableField<ItemsRecord, DateTime> createdAt = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "", new DateTimeConverter());

	/**
	 * The column <code>feedzee2.items.updated_at</code>.
	 */
	public final TableField<ItemsRecord, DateTime> updatedAt = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "", new DateTimeConverter());

	/**
	 * The column <code>feedzee2.items.guid</code>.
	 */
	public final TableField<ItemsRecord, String> guid = createField("guid", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "", new StringConverter());

	/**
	 * The column <code>feedzee2.items.subscription_pushed</code>.
	 */
	public final TableField<ItemsRecord, Byte> subscriptionPushed = createField("subscription_pushed", org.jooq.impl.SQLDataType.TINYINT, this, "");

	/**
	 * Create a <code>feedzee2.items</code> table reference
	 */
	public Items() {
		this("items", null);
	}

	/**
	 * Create an aliased <code>feedzee2.items</code> table reference
	 */
	public Items(java.lang.String alias) {
		this(alias, items);
	}

	private Items(java.lang.String alias, Table<ItemsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Items(java.lang.String alias, Table<ItemsRecord> aliased, Field<?>[] parameters) {
		super(alias, Feedzee2.feedzee2, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ItemsRecord, Integer> getIdentity() {
		return Keys.IDENTITY_items;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ItemsRecord> getPrimaryKey() {
		return Keys.keyItemsPrimary;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ItemsRecord>> getKeys() {
		return Arrays.<UniqueKey<ItemsRecord>>asList(Keys.keyItemsPrimary);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Items as(java.lang.String alias) {
		return new Items(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Items rename(java.lang.String name) {
		return new Items(name, null);
	}
}

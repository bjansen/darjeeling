/**
 * This class is generated by jOOQ
 */
package gen.com.github.bjansen.darjeeling;

/**
 * A class modelling foreign key relationships between tables of the <code>feedzee2</code> 
 * schema
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.0"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final org.jooq.Identity<gen.com.github.bjansen.darjeeling.tables.records.FeedsRecord, java.lang.Integer> IDENTITY_FEEDS = Identities0.IDENTITY_FEEDS;
	public static final org.jooq.Identity<gen.com.github.bjansen.darjeeling.tables.records.FoldersRecord, java.lang.Integer> IDENTITY_FOLDERS = Identities0.IDENTITY_FOLDERS;
	public static final org.jooq.Identity<gen.com.github.bjansen.darjeeling.tables.records.ItemsRecord, java.lang.Integer> IDENTITY_ITEMS = Identities0.IDENTITY_ITEMS;
	public static final org.jooq.Identity<gen.com.github.bjansen.darjeeling.tables.records.ItemsToReadRecord, java.lang.Integer> IDENTITY_ITEMS_TO_READ = Identities0.IDENTITY_ITEMS_TO_READ;
	public static final org.jooq.Identity<gen.com.github.bjansen.darjeeling.tables.records.SubscriptionsRecord, java.lang.Integer> IDENTITY_SUBSCRIPTIONS = Identities0.IDENTITY_SUBSCRIPTIONS;
	public static final org.jooq.Identity<gen.com.github.bjansen.darjeeling.tables.records.UsersRecord, java.lang.Integer> IDENTITY_USERS = Identities0.IDENTITY_USERS;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final org.jooq.UniqueKey<gen.com.github.bjansen.darjeeling.tables.records.FeedsRecord> KEY_FEEDS_PRIMARY = UniqueKeys0.KEY_FEEDS_PRIMARY;
	public static final org.jooq.UniqueKey<gen.com.github.bjansen.darjeeling.tables.records.FoldersRecord> KEY_FOLDERS_PRIMARY = UniqueKeys0.KEY_FOLDERS_PRIMARY;
	public static final org.jooq.UniqueKey<gen.com.github.bjansen.darjeeling.tables.records.ItemsRecord> KEY_ITEMS_PRIMARY = UniqueKeys0.KEY_ITEMS_PRIMARY;
	public static final org.jooq.UniqueKey<gen.com.github.bjansen.darjeeling.tables.records.ItemsToReadRecord> KEY_ITEMS_TO_READ_PRIMARY = UniqueKeys0.KEY_ITEMS_TO_READ_PRIMARY;
	public static final org.jooq.UniqueKey<gen.com.github.bjansen.darjeeling.tables.records.SchemaMigrationsRecord> KEY_SCHEMA_MIGRATIONS_UNIQUE_SCHEMA_MIGRATIONS = UniqueKeys0.KEY_SCHEMA_MIGRATIONS_UNIQUE_SCHEMA_MIGRATIONS;
	public static final org.jooq.UniqueKey<gen.com.github.bjansen.darjeeling.tables.records.StorageversionRecord> KEY_STORAGEVERSION_PRIMARY = UniqueKeys0.KEY_STORAGEVERSION_PRIMARY;
	public static final org.jooq.UniqueKey<gen.com.github.bjansen.darjeeling.tables.records.SubscriptionsRecord> KEY_SUBSCRIPTIONS_PRIMARY = UniqueKeys0.KEY_SUBSCRIPTIONS_PRIMARY;
	public static final org.jooq.UniqueKey<gen.com.github.bjansen.darjeeling.tables.records.UsersRecord> KEY_USERS_PRIMARY = UniqueKeys0.KEY_USERS_PRIMARY;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------


	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends org.jooq.impl.AbstractKeys {
		public static org.jooq.Identity<gen.com.github.bjansen.darjeeling.tables.records.FeedsRecord, java.lang.Integer> IDENTITY_FEEDS = createIdentity(gen.com.github.bjansen.darjeeling.tables.Feeds.FEEDS, gen.com.github.bjansen.darjeeling.tables.Feeds.FEEDS.ID);
		public static org.jooq.Identity<gen.com.github.bjansen.darjeeling.tables.records.FoldersRecord, java.lang.Integer> IDENTITY_FOLDERS = createIdentity(gen.com.github.bjansen.darjeeling.tables.Folders.FOLDERS, gen.com.github.bjansen.darjeeling.tables.Folders.FOLDERS.ID);
		public static org.jooq.Identity<gen.com.github.bjansen.darjeeling.tables.records.ItemsRecord, java.lang.Integer> IDENTITY_ITEMS = createIdentity(gen.com.github.bjansen.darjeeling.tables.Items.ITEMS, gen.com.github.bjansen.darjeeling.tables.Items.ITEMS.ID);
		public static org.jooq.Identity<gen.com.github.bjansen.darjeeling.tables.records.ItemsToReadRecord, java.lang.Integer> IDENTITY_ITEMS_TO_READ = createIdentity(gen.com.github.bjansen.darjeeling.tables.ItemsToRead.ITEMS_TO_READ, gen.com.github.bjansen.darjeeling.tables.ItemsToRead.ITEMS_TO_READ.ID);
		public static org.jooq.Identity<gen.com.github.bjansen.darjeeling.tables.records.SubscriptionsRecord, java.lang.Integer> IDENTITY_SUBSCRIPTIONS = createIdentity(gen.com.github.bjansen.darjeeling.tables.Subscriptions.SUBSCRIPTIONS, gen.com.github.bjansen.darjeeling.tables.Subscriptions.SUBSCRIPTIONS.ID);
		public static org.jooq.Identity<gen.com.github.bjansen.darjeeling.tables.records.UsersRecord, java.lang.Integer> IDENTITY_USERS = createIdentity(gen.com.github.bjansen.darjeeling.tables.Users.USERS, gen.com.github.bjansen.darjeeling.tables.Users.USERS.ID);
	}

	private static class UniqueKeys0 extends org.jooq.impl.AbstractKeys {
		public static final org.jooq.UniqueKey<gen.com.github.bjansen.darjeeling.tables.records.FeedsRecord> KEY_FEEDS_PRIMARY = createUniqueKey(gen.com.github.bjansen.darjeeling.tables.Feeds.FEEDS, gen.com.github.bjansen.darjeeling.tables.Feeds.FEEDS.ID);
		public static final org.jooq.UniqueKey<gen.com.github.bjansen.darjeeling.tables.records.FoldersRecord> KEY_FOLDERS_PRIMARY = createUniqueKey(gen.com.github.bjansen.darjeeling.tables.Folders.FOLDERS, gen.com.github.bjansen.darjeeling.tables.Folders.FOLDERS.ID);
		public static final org.jooq.UniqueKey<gen.com.github.bjansen.darjeeling.tables.records.ItemsRecord> KEY_ITEMS_PRIMARY = createUniqueKey(gen.com.github.bjansen.darjeeling.tables.Items.ITEMS, gen.com.github.bjansen.darjeeling.tables.Items.ITEMS.ID);
		public static final org.jooq.UniqueKey<gen.com.github.bjansen.darjeeling.tables.records.ItemsToReadRecord> KEY_ITEMS_TO_READ_PRIMARY = createUniqueKey(gen.com.github.bjansen.darjeeling.tables.ItemsToRead.ITEMS_TO_READ, gen.com.github.bjansen.darjeeling.tables.ItemsToRead.ITEMS_TO_READ.ID);
		public static final org.jooq.UniqueKey<gen.com.github.bjansen.darjeeling.tables.records.SchemaMigrationsRecord> KEY_SCHEMA_MIGRATIONS_UNIQUE_SCHEMA_MIGRATIONS = createUniqueKey(gen.com.github.bjansen.darjeeling.tables.SchemaMigrations.SCHEMA_MIGRATIONS, gen.com.github.bjansen.darjeeling.tables.SchemaMigrations.SCHEMA_MIGRATIONS.VERSION);
		public static final org.jooq.UniqueKey<gen.com.github.bjansen.darjeeling.tables.records.StorageversionRecord> KEY_STORAGEVERSION_PRIMARY = createUniqueKey(gen.com.github.bjansen.darjeeling.tables.Storageversion.STORAGEVERSION, gen.com.github.bjansen.darjeeling.tables.Storageversion.STORAGEVERSION.ID);
		public static final org.jooq.UniqueKey<gen.com.github.bjansen.darjeeling.tables.records.SubscriptionsRecord> KEY_SUBSCRIPTIONS_PRIMARY = createUniqueKey(gen.com.github.bjansen.darjeeling.tables.Subscriptions.SUBSCRIPTIONS, gen.com.github.bjansen.darjeeling.tables.Subscriptions.SUBSCRIPTIONS.ID);
		public static final org.jooq.UniqueKey<gen.com.github.bjansen.darjeeling.tables.records.UsersRecord> KEY_USERS_PRIMARY = createUniqueKey(gen.com.github.bjansen.darjeeling.tables.Users.USERS, gen.com.github.bjansen.darjeeling.tables.Users.USERS.ID);
	}
}
